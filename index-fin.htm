
<html>
<head>
<title>COSC/MATH/MSCS 4931/5931 - Advanced Data Science</title>
<link href="https://fonts.googleapis.com/css?family=Alegreya|Alegreya+Sans" rel\
="stylesheet">
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/styles/default.min.css">
<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/highlight.min.js"></script>
<style>
body { font-family: 'Alegreya Sans', Calibri, sans-serif; }
svg { border: solid #ccc 1px; }
</style>
</head>
<body>
<h3>Notes for Wednesday, January 24</h3>

<div>
<ul>
	<li>We are now using <a href="https://d3js.org/">Mike Bostock's d3 library</a>. Start reading <a href="https://github.com/d3/d3/blob/master/API.md">the documentation to learn secret skills</a>.</li>
</ul>
</div>

<div>Inspiration: the <a href="https://ropercenter.cornell.edu/important-problem-dataset/">Roper Center archive of "Most Important Problem" surveys</a>.
</div>

<div>
	D3 is a library that makes it easy to create and manipulate page elements. It's not restricted to SVG elements, but that's what we'll usually use it for. We'll start by using d3 to select DOM elements, create new elements, and modify the content and appearance of elements.
</div>

<!-- Here's a standard HTML div element with an ID and a class -->
<div id="d1" class="header">Hello!</div>

<!-- Here's an SVG canvas element. Note that in this file it looks like the <div> above. -->
<svg height="200" width="200">
  <!-- Visual elements are represented by tags, which have attributes -->
</svg>

<script id="notes">
// 1. How can we select elements? What is the difference between select() and selectAll()?

var div = d3.select("#d1");
div.text("Goodbye!");

var divs = d3.selectAll("div");
//divs.style("color", "red");

// 2. How can we create new elements, and set their attributes and styles?

var svg = d3.select("svg");
svg.append("circle")
.attr("r", 10)
.style("fill", "red")
.on("click", function () { console.log("hi!")});

function randomX() {
	return 200 * Math.random();
}
function randomY() {
	return 200 * Math.random();
}

// C-style for loop. Each "append" call occurs in its own loop, so it doesn't matter if we pass a value (randomX()) or a function (randomY).
for (var i = 0; i < 5; i++) {
	svg.append("circle")
	.attr("r", 10)
	.attr("cx", randomX()) // parens -- VALUE of function call
	.attr("cy", randomY) // NO parens -- function itself
	.style("fill", "red");
}

// Functional-style for loop. The anonymous function is called on each element of the list.
[5, 6, 7, 8, 9, 10].forEach(function (d) {
	svg.append("circle")
	.attr("r", d)
	.attr("cx", randomX)
	.attr("cy", randomY)
	.style("fill", "green");
});

// 3. How do we update the attributes of existing elements?

d3.selectAll("circle")
.transition().delay(500).duration(500)
.attr("cx", randomX()) // applying same NUMBER to all circles
.style("fill", "blue");

d3.selectAll("circle")
.transition().delay(1500).duration(500)
.attr("cx", randomX)  // applying same FUNCTION to all circles
.style("fill", "blue");

</script>

<!-- This block will be automatically filled with syntax-highlighted code from the script below -->
<pre><code id="display">
</code></pre>


<script>
document.getElementById("display").innerText = document.getElementById("notes").innerText;
hljs.initHighlightingOnLoad();
</script>


</body>
</html>
